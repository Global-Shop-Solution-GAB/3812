Program.Sub.ScreenSU.Start
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start

Program.Sub.Definition.DefaultArgs("ProcessDir","dir")
Program.Sub.Definition.DefaultArgs("ProcessSubDir","Dir*!*SubFolder*!*LinkID*!*GroupID")
Variable.Global.iHDL.Declare(Long,0)

Program.Sub.Preflight.End

Program.Sub.Main.Start
V.Local.sDir.Declare(String)
V.Local.sCustDir.Declare(String)
V.Local.sCustDirs.Declare(String)
V.Local.sDirs.Declare(String)
V.Local.iC.Declare(Long)
V.Local.ix.Declare(Long)
V.Local.bRet.Declare(Boolean)

F.Intrinsic.String.Concat(V.Caller.FilesDir,"\LOADPARTDCC.do",V.Local.sDir)
F.Intrinsic.File.Exists(V.Local.sDir,V.Local.bRet)
F.Intrinsic.Control.If(V.Local.bRet,=,False)
	F.Intrinsic.UI.Msgbox("The file LOADPARTDCC.do does not exist. Please check the file name and file location.")
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndIf
F.Intrinsic.File.FIle2String(V.Local.sDir,V.Local.sDir)
F.Intrinsic.string.Split(V.Local.sDir,V.Ambient.NewLine,V.Local.sDir)
V.Local.sCustDir.Set(V.Local.sDir)

F.Intrinsic.File.GetHandle(V.global.iHDL)
F.Intrinsic.String.Format(V.Ambient.Now,"MMDDYYYhhnnss",V.Local.sDir)
F.ODBC.Connection!conx.OpenConnection(V.Ambient.PDSN,V.Ambient.PUser,V.Ambient.PPass)
F.Intrinsic.String.Concat(V.Caller.FilesDir,"\LOAD_DCC",V.Local.sDir,".log",V.Local.sDir)
F.Intrinsic.File.OpenForWrite(V.Local.sDir,V.Global.iHDL)

F.Intrinsic.File.GetFileList(V.Local.sCustDir,16,V.Local.sCustDirs)
F.Intrinsic.string.Split(V.Local.sCustDirs,":",V.Local.sCustDirs)
F.Intrinsic.Debug.Print(V.Local.sCustDirs.UBound)
F.Intrinsic.Debug.DumpVariableList

F.Intrinsic.Control.For(V.Local.iX,0,V.Local.sCustDirs.UBound,1)
	F.Intrinsic.Control.If(V.Local.sCustDirs(v.local.ix),<>,".")
		F.Intrinsic.Control.If(V.Local.sCustDirs(v.local.ix),<>,"..")
			V.Local.sDir.Set(V.Local.sCustDirs(v.Local.ix))
			F.Intrinsic.String.Concat(V.local.sCustDir,V.Local.sDir,"\",V.Local.sDir)
			F.Intrinsic.File.DirExists(V.Local.sDir,V.Local.bRet)
			F.Intrinsic.Control.If(V.local.bRet,=,True)
				F.Intrinsic.UI.InvokeWaitDialog("Processing Folder")
				F.Intrinsic.File.GetFileList(V.Local.sDir,16,V.Local.sDirs)
				F.Intrinsic.string.Split(V.Local.sDirs,":",V.Local.sDirs)
				F.Intrinsic.control.For(V.Local.iC,0,V.Local.sDirs.UBound,1)
					F.Intrinsic.Control.If(V.Local.sDirs(v.Local.iC),<>,".")
						F.Intrinsic.Control.If(V.Local.sDirs(v.Local.iC),<>,"..")
							F.Intrinsic.String.Concat(V.Local.sDir,V.local.sDirs(v.Local.ic),V.Local.sDirs(v.Local.ic))
							F.Intrinsic.File.Exists(V.Local.sDirs(v.Local.iC),V.Local.bRet)
							F.Intrinsic.Control.If(V.Local.bRet,=,False)
								F.Intrinsic.Control.CallSub(Processdir,"dir",V.Local.sDirs(v.Local.iC))
							F.Intrinsic.Control.endif
						F.Intrinsic.Control.EndIf
					F.Intrinsic.Control.endif
				F.Intrinsic.Control.Next(V.Local.iC)
				F.Intrinsic.UI.CloseWaitDialog

			F.Intrinsic.Control.EndIf

		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Next(V.Local.ix)

F.ODBC.Connection!conx.Close
F.Intrinsic.Control.end


Program.Sub.Main.End

Program.Sub.ProcessDir.Start
V.Local.sRouter.Declare(String)
V.Local.sDir.Declare(String)
V.Local.bRet.Declare(Boolean)
V.Local.sSubFolder.Declare(String)
V.Local.iLinkID.Declare(Long)
V.Local.iDocID.Declare(Long)
V.Local.iPos.Declare(Long)
V.Local.sQuery.Declare(String)
'''''added by ENM 4/23/12
V.Local.sPR.Declare(String)
V.Local.sPart.Declare(String)
V.Local.sRev.Declare(String)
V.Local.sText.Declare(String)
''''''

V.Local.sDir.Set(V.Args.dir)
F.Intrinsic.String.Instrrev(V.Local.sDir,"\",V.Local.iPos)

F.Intrinsic.Math.add(V.Local.iPos,1,V.Local.ipos)
F.Intrinsic.String.Mid(V.Local.sDir,V.Local.iPos,V.Local.sRouter)

'F.Intrinsic.String.Instr(V.local.sRouter,",",V.Local.iPos)
'F.Intrinsic.Control.If(V.Local.iPos,<>,0)
'	F.Intrinsic.Math.Sub(V.Local.iPos,1,V.Local.iPos)
'	F.Intrinsic.String.Left(V.local.sRouter,V.Local.iPos,V.Local.sRouter)
'F.Intrinsic.Control.EndIf
F.Intrinsic.String.Replace(V.Local.sRouter,"-"," ",V.Local.sRouter)
F.Intrinsic.String.UCase(V.Local.sRouter,V.Local.sRouter)

'Getting Rev  this was added 4/23/2012
F.Intrinsic.String.Split(V.Local.sRouter,",",V.Local.sRouter)
F.Intrinsic.Control.If(V.Local.sRouter.UBound,>,0)
	'set part number
	V.Local.sPart.Set(V.Local.sRouter(0))
	F.Intrinsic.String.Instr(V.Local.sRouter(1),"Rev. ",V.Local.iPos)
	'get Rev
	F.Intrinsic.Control.If(V.Local.iPos,<>,0)
		F.Intrinsic.String.Mid(V.Local.sRouter(1),6,,V.Local.sRev)
		'Create GSS Part with Part plus Rev from file name
		F.Intrinsic.String.GSSPartString(V.Local.sPart,V.Local.sRev,V.Local.sPR)
	'F.Intrinsic.Control.Else
		'may need to add some code here to deal with the wrong file names, I think that we will have dealt with it with the inventory lookup though.
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf
F.Intrinsic.String.Replace(V.Local.sPR,"-"," ",V.Local.sPR)

'Add check and warn if part now found in inventory
'V.Local.sRouter.Set(V.Passed.000007,10210)
'V.Local.sRouter.Set(V.Passed.000007,10220)
'V.Local.sRouter.Set(V.Passed.000007,10230)
'V.Local.sRouter.Set(V.Local.sRouter.UCase)
V.Local.sRouter.Set(V.Local.sPR.UCase)
'F.Intrinsic.String.Concat("SELECT PART FROM INVENTORY_MSTR WHERE PART = '",V.Local.sRouter.PSQLFriendly,"'",V.Local.sQuery)
F.Intrinsic.String.Concat("SELECT PART FROM INVENTORY_MSTR WHERE PART = '",V.Local.sPR.PSQLFriendly,"'",V.Local.sQuery)

F.ODBC.Connection!conx.OpenRecordsetRO("rst",V.Local.sQuery)
F.Intrinsic.Control.If(V.ODBC.conx!rst.EOF,=,True)
	'F.Intrinsic.String.Concat("Part not found: ",V.Local.sRouter,V.Local.sQuery)
	'F.Intrinsic.File.WriteLine(V.global.iHDL,V.Local.sQuery)
	'F.ODBC.conx!rst.Close
	F.Intrinsic.String.Concat("Part not found: ",V.Local.sPR,V.Local.sText)
	F.Intrinsic.Debug.SetLA(V.Ambient.NewLine,V.Local.sText," with File name:",V.Local.sRouter)
	'F.Intrinsic.Control.CallSub(Log,"bAppend","True","sText",V.Local.sRouter)
	F.Intrinsic.File.WriteLine(V.global.iHDL,V.Local.sQuery)
	F.Intrinsic.File.WriteLine(V.global.iHDL,V.Local.sRouter)
	F.ODBC.conx!rst.Close

	F.Intrinsic.Control.exitsub
F.Intrinsic.Control.EndIf
F.ODBC.conx!rst.Close

F.Global.DocumentControl.CreateReference(V.Local.sRouter,30,V.Local.iLinkID)
F.Intrinsic.Control.CallSub(Processsubdir,"Dir",V.Local.sDir,"LinkID",V.Local.iLinkID,"SubFolder","GMMDATA\CAD-AND-PRINTS","groupid",1)
F.Intrinsic.Control.CallSub(Processsubdir,"Dir",V.Local.sDir,"LinkID",V.Local.iLinkID,"SubFolder","GMMData\MachineData","groupid",2)
F.Intrinsic.Control.CallSub(Processsubdir,"Dir",V.Local.sDir,"LinkID",V.Local.iLinkID,"SubFolder","CustomerData\CustomerCad","groupid",3)
F.Intrinsic.Control.CallSub(Processsubdir,"Dir",V.Local.sDir,"LinkID",V.Local.iLinkID,"SubFolder","CustomerData\CustomerPrints","groupid",4)
F.Intrinsic.Control.CallSub(Processsubdir,"Dir",V.Local.sDir,"LinkID",V.Local.iLinkID,"SubFolder","QualityDocuments\InspectionSheets","groupid",5)

Program.Sub.ProcessDir.End

Program.Sub.ProcessSubDir.Start
V.Local.iC.Declare(Long)
V.Local.sSubDir.Declare(String)
V.Local.sDoc.Declare(String)
V.Local.bRet.Declare(Boolean)

F.Intrinsic.String.Concat(V.Args.dir,"\",V.Args.subfolder,"\",V.Local.sSubDir)
F.Intrinsic.UI.ChangeWaitStatus(V.local.ssubDir,V.args.groupid,1,5)
F.Intrinsic.File.DirExists(V.Local.ssubdir,V.Local.bRet)
F.Intrinsic.Control.If(V.Local.bRet,=,True)
	F.Intrinsic.File.GetFileList(V.Local.sSubDir,V.Local.sSubDir)
	F.Intrinsic.String.Split(V.Local.sSubDir,":",V.Local.sSubDir)

	F.Intrinsic.Control.For(V.Local.iC,0,V.Local.sSubDir.UBound,1)

		F.Intrinsic.String.Concat(V.Args.dir,"\",V.Args.subfolder,"\",V.Local.sSubDir(v.Local.iC),V.Local.sDoc)
		F.Intrinsic.File.Exists(V.Local.sDoc,V.Local.bRet)
		F.Intrinsic.control.If(V.Local.bRet,=,True)
			F.Intrinsic.File.GetUNCName(V.Local.sDoc,V.Local.sDoc)
			F.Intrinsic.String.Replace(V.Local.sDoc,"'","''",V.Local.sDoc)

			F.Global.DocumentControl.AddDocument(V.Args.LinkID,V.Local.sDoc,"",V.args.groupid,"")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.next(V.Local.iC)
F.Intrinsic.Control.EndIf

Program.Sub.ProcessSubDir.End


